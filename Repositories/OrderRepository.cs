using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using Microsoft.Extensions.Configuration;
using RealTime_StockExchange.Interfaces;
using RealTime_StockExchange.Common;
using RealTime_StockExchange.Models;
using Microsoft.EntityFrameworkCore;
using StockUpdates.Context;

namespace RealTime_StockExchange.Repositories
{
    public class OrderRepository : IOrderRepository
    {
        private StockUpdatesContext _context = null;
        private DbSet<Order> _orders = null;
        private readonly IConfiguration _configuration;


        public OrderRepository()
        {
            this._context = new StockUpdatesContext();

            _orders = _context.Set<Order>();
        }

        public async Task<Order> AddOrder(Order _obj)
        {

            DateTime DateTime_ = DateTime.Now;

            using (var transaction = _context.Database.BeginTransaction())
            {
                try
                {


                    _context.Add(_obj);
                    await _context.SaveChangesAsync();
                    transaction.CommitAsync();
                }


                catch (Exception ex)
                {


                    Console.Write("An error occured");
                }
            }
            return _obj;
        }


        public async Task<List<Order>> GetOrders()
        {

            var list = new List<Order>();
            DateTime DateTime_ = DateTime.Now;

            try
            {


                list = await _context.Orders.ToListAsync();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");
            }

            return list;
        }


      

/*
        public async Task<Order> UpdateClient(Order client,int ID)
        {

            //var list = new List<AcademicCourse>();
            DateTime DateTime_ = DateTime.Now;
            ///var course = new AcademicCourse();
            var result = new Order();
            try
            {
                client.Id= ID;

                result = _orders.Update(client).Entity;
                _context.SaveChanges();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");

            }
            return result;


        }*/


  /*      public async Task<Order> DeleteClient(int CourseId)
        {

            //var list = new List<AcademicCourse>();
            DateTime DateTime_ = DateTime.Now;
            var result = new Order();   
            try
            {

                result = _orders.Where(m => m.Id == CourseId).First();
                result = _orders.Remove(result).Entity;
                _context.SaveChanges();

            }
            catch (Exception ex)
            {
                Console.Write("An error occured");

            }
            return result;


        }*/










    }
}
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































